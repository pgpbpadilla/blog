#+property: header-args :results verbatim

* TODO Testing for broken links
  :PROPERTIES:
  :ID:       BCC4C4AC-7690-41BF-B430-6658685E5A30
  :END:

  1. [ ] integrate testing with developer workflow
     https://chatgpt.com/share/c35c6a84-8d37-44d8-8bb3-4136c1c048b6

** localhost: [[http://linklint.org]]

   Used to find/test for broken links in the Blog.
  

*** Install dependencies

    #+begin_src bash
      brew bundle install --quiet --file Brewfile
    #+end_src

    #+RESULTS:
    : Using homebrew/bundle
    : Using homebrew/cask
    : Using homebrew/core
    : Using homebrew/services
    : Using linklint
    : Homebrew Bundle complete! 5 Brewfile dependencies now installed.

  
*** Scan local Blog for broken links: [[http://linklint.org/doc/index.html][doc]]
  
    #+begin_src bash 
      linklint -http -host localhost:4000 -limit 5000 -doc linklint/local /@
      open linklint/local/index.html
    #+end_src

    #+RESULTS:


*** Scan live Blog for broken links: [[http://linklint.org/doc/index.html][doc]]
  
    #+begin_src bash
      mkdir -p linklint
      linklint -http -host https://pgpbpadilla.github.io -limit 5000 -doc linklint /@
      open linklint/live/index.html
    #+end_src

    #+RESULTS:

    
** Live site: [[https://dnschecker.org/website-broken-link-checker.php][dnschecker.org]]

   Will also check for broken links in your live site.
  

* Testing Github action

  
** Locally running the action's Docker container

   Minimal setup to run the github action locally:
   
   #+begin_src bash :results silent
     docker run -w /blog  \
            -e "INPUT_TOKEN=XXX"\
            -e "INPUT_PROVIDER=test"  \
            -e "INPUT_JEKYLL_SRC=/blog/org/jekyll"  \
            -e "INPUT_JEKYLL_CFG=_config.yml"  \
            -v "/var/run/docker.sock":"/var/run/docker.sock"  \
            -v "$(pwd)":"/blog" \
            blog:latest
   #+end_src

*** Debug/Run container in interactive mode

    #+begin_src bash
      docker run\
             --entrypoint /bin/bash\
             -it\
             -v "$(pwd)":"/blog" \
             -w /blog             \
             -e "INPUT_TOKEN=XXX"           \
             -e "INPUT_PROVIDER=test"             \
             -e "INPUT_JEKYLL_SRC=/blog/org/jekyll"             \
             -e "INPUT_JEKYLL_CFG=_config.yml"             \
             -v "/var/run/docker.sock":"/var/run/docker.sock"             \
             blog:latest
    #+end_src

    
** Example copied from Github actions
   
   #+begin_src bash
     docker run\
            --workdir /github/workspace\
            --rm\
            -e "INPUT_PROVIDER"\
            -e "INPUT_TOKEN"\
            -e "INPUT_REPOSITORY"\
            -e "INPUT_BRANCH"\
            -e "INPUT_JEKYLL_SRC"\
            -e "INPUT_JEKYLL_CFG"\
            -e "INPUT_JEKYLL_BASEURL"\
            -e "INPUT_BUNDLER_VER"\
            -e "INPUT_CNAME"\
            -e "INPUT_ACTOR"\
            -e "INPUT_PRE_BUILD_COMMANDS"\
            -e "INPUT_SSH_PRIVATE_KEY"\
            -e "HOME"\
            -e "GITHUB_JOB"\
            -e "GITHUB_REF"\
            -e "GITHUB_SHA"\
            -e "GITHUB_REPOSITORY"\
            -e "GITHUB_REPOSITORY_OWNER"\
            -e "GITHUB_REPOSITORY_OWNER_ID"\
            -e "GITHUB_RUN_ID"\
            -e "GITHUB_RUN_NUMBER"\
            -e "GITHUB_RETENTION_DAYS"\
            -e "GITHUB_RUN_ATTEMPT"\
            -e "GITHUB_REPOSITORY_ID"\
            -e "GITHUB_ACTOR_ID"\
            -e "GITHUB_ACTOR"\
            -e "GITHUB_TRIGGERING_ACTOR"\
            -e "GITHUB_WORKFLOW"\
            -e "GITHUB_HEAD_REF"\
            -e "GITHUB_BASE_REF"\
            -e "GITHUB_EVENT_NAME"\
            -e "GITHUB_SERVER_URL"\
            -e "GITHUB_API_URL"\
            -e "GITHUB_GRAPHQL_URL"\
            -e "GITHUB_REF_NAME"\
            -e "GITHUB_REF_PROTECTED"\
            -e "GITHUB_REF_TYPE"\
            -e "GITHUB_WORKFLOW_REF"\
            -e "GITHUB_WORKFLOW_SHA"\
            -e "GITHUB_WORKSPACE"\
            -e "GITHUB_ACTION"\
            -e "GITHUB_EVENT_PATH"\
            -e "GITHUB_ACTION_REPOSITORY"\
            -e "GITHUB_ACTION_REF"\
            -e "GITHUB_PATH"\
            -e "GITHUB_ENV"\
            -e "GITHUB_STEP_SUMMARY"\
            -e "GITHUB_STATE"\
            -e "GITHUB_OUTPUT"\
            -e "RUNNER_OS"\
            -e "RUNNER_ARCH"\
            -e "RUNNER_NAME"\
            -e "RUNNER_ENVIRONMENT"\
            -e "RUNNER_TOOL_CACHE"\
            -e "RUNNER_TEMP"\
            -e "RUNNER_WORKSPACE"\
            -e "ACTIONS_RUNTIME_URL"\
            -e "ACTIONS_RUNTIME_TOKEN"\
            -e "ACTIONS_CACHE_URL"\
            -e "ACTIONS_RESULTS_URL"\
            -e GITHUB_ACTIONS=true\
            -e CI=true\
            -v "/var/run/docker.sock":"/var/run/docker.sock"\
            -v "/home/runner/work/_temp/_github_home":"/github/home"\
            -v "/home/runner/work/_temp/_github_workflow":"/github/workflow"\
            -v "/home/runner/work/_temp/_runner_file_commands":"/github/file_commands"\
            -v "/home/runner/work/pgpbpadilla.github.io/pgpbpadilla.github.io":"/github/workspace"\
            6ec952:cd442b5769b449938e78c9114db00719
   #+end_src


