* Developer tools required to edit the Blog

  This repository contains all sources necessary to publish
  a Jekyll Blog using Github Pages.


  keywords: jekyll blog github


** Requirements

   - Docker
   - [Jekyll 4.1.1+](https://jekyllrb.com/)
   - Python 3.8.5+
     - (Optional) - Python Virtual environment, checkout: 
       [pyenv](https://github.com/pyenv/pyenv) 


** Quick Start

   1) Install development tools: `./setup.sh`
   2) List available tasks: `inv -l` 


** Publishing to Github Pages

   1) Site is published to:
      https://pgpbpadilla.github.io/
   2) Repo configuration:
      https://github.com/pgpbpadilla/pgpbpadilla.github.io/settings/pages 
   3) Published using Github Actions
      https://github.com/pgpbpadilla/pgpbpadilla.github.io/actions
      
      - https://github.com/marketplace/actions/jekyll-deploy-action
        This Github action is the key ingredient that allows the use of
        any Gem, and not just the ones whitelisted by Github.

        + *GOTCHA*: currently I have a fork of this action since that
          was the fastest way to fix an error

          * error was reported in [[https://github.com/jeffreytse/jekyll-deploy-action/issues/64][jekyll-deploy-action#64]]

          * the fix was proposed in: [[https://github.com/jeffreytse/jekyll-deploy-action/issues/64#issuecomment-1554834692][jekyll-deploy-action#64#issuecomment]]

          * I have forked [[https://github.com/malachi-constant/jekyll-deploy-action][malachi-constant/jekyll-deploy-action]] into
            [[https://github.com/pgpbpadilla/jekyll-deploy-action][pgpbpadilla/jekyll-deploy-action]] without changes

            - I had to create a tag in my fork: [[https://github.com/pgpbpadilla/jekyll-deploy-action/tags][jekyll-deploy-action/tags]]

            - then I updated my workflow definition to call my forked
              action in [[https://github.com/pgpbpadilla/pgpbpadilla.github.io/blob/master/.github/workflows/jekyll.yml#L23][pgpbpadilla.github.io#jekyll.yml#L23]] 

      

** Other Tools used

   1) [Jekyll Docker](https://github.com/envygeeks/jekyll-docker)
   2) Python Virtual Environment with `pyenv`
      ```shell script
      $ pyenv activate
      ```
   3) Ruby Virtual Environment with `rvm`
      ```shell script
      $ rvm use 2.7.0
      ```

** Ruby upgrade
   :PROPERTIES:
   :header-args: :dir ~/blog :results output
   :END:
   :LOGBOOK:
   :END:

*** Build custom image

    #+name: build
    #+begin_src bash
      docker build -t blog:ruby3 .
    #+end_src

    #+RESULTS: build

    #+RESULTS:

    
*** Build Blog

    #+begin_src bash
      docker run \
             -v $(pwd):/blog \
             -w /blog \
             blog:ruby3
    #+end_src

    #+RESULTS:
    : Hello
