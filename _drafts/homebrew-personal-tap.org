#+LANGUAGE: en

#+begin_comment Explain: OPTIONS
1) Do not generate Org TOC:
   https://orgmode.org/manual/Table-of-Contents.html
2) Continue export even when there are broken links
   https://orgmode.org/manual/Export-Settings.html
#+end_comment
#+OPTIONS: toc:nil  broken-links:mark

#+begin_export html
---
layout: post.liquid
title:  "Homebrew package upgrade breaks stuff"
date: 2023-12-08 Sa 11:01
last_updated: 2023-12-08 Sa 11:01
tags:
  - journal
  - tech
  - homebrew
  - macos
  - package-management
  - gnupg
categories: [tech, journal]
#permalink: /2023-12-08-personal-homebrew-tap
toc: false
---

#+end_export


Homebrew package upgrades have regularly broken my personal setup,
blocking me from completing my current task. My personal Homebrew tap
allows me to install the specific versions of a package that I know
will work well with my setup. 



* Invisible heading


Recently I ran a Homebrew upgrade:

#+begin_example bash
brew upgrade
#+end_example


Later that day I noticed that saving encrypted files in Emacs was not
really working. Anytime I would try to save changes Emacs would hang
indefinitely.

After some googling I found that many others were having the same
issue after upgrading their GnuPG package.

Initially I was able to fix the issue by following some instructions
in StackOverflow. However, that only lasted until I ran into the same
issue in my work computer. This time it was a bit more tricky, I had
updated my local setup to pin the minor version of GnuPG to version
2.2 so I was surprised that although the "correct" version was
installed Emacs would still hang during encryption.

It took me a while to notice that my personal computer was using a
version which only differed in at the patch level.

- Work computer version: *2.2.42*
- Personal computer version: *2.2.41*


Homebrew typically does not provide versioned formulas for different
PATCH numbers, so I was not able to simply do:

#+begin_example bash
brew install gnupg@2.2.41
#+end_example


I remembered how I once had a similar problem and was able to install
a specific version of another package, up to the PATCH number. My
solution at the time was to create a personal Homebrew tap with a
custom formula for the desired package.

So I found the original versioned formula for gnupg@2.2 and
tweaked it a little bit to install version 2.2.41. This worked fine,
although the install time got longer since it's built from
sources.

You can find the results in my personal Homebrew tap in Github:
pgpbpadilla/homebrew-pgpb. 




  
  

